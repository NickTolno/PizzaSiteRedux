{"ast":null,"code":"import { getCartFromLS } from './../../utils/getCartStateFromLS';\nimport { createSlice } from '@reduxjs/toolkit';\nconst {\n  items,\n  totalCount,\n  totalPrice\n} = getCartFromLS();\nconst initialState = {\n  items,\n  totalCount,\n  totalPrice\n};\nexport const cartSlice = createSlice({\n  name: 'cartSlice',\n  initialState,\n  reducers: {\n    addItemToCart: (state, action) => {\n      const findItem = state.items.find(item => item.id === action.payload.id);\n\n      if (!findItem) {\n        state.items.push(action.payload);\n      } else {\n        findItem.count += 1;\n      }\n\n      state.totalCount += 1;\n      state.totalPrice += action.payload.price;\n    },\n    removeCartItem: (state, action) => {\n      const findItem = state.items.find(item => item.id === action.payload);\n\n      if (findItem) {\n        state.totalCount -= findItem.count;\n        state.totalPrice -= findItem.price * findItem.count;\n      }\n\n      state.items = state.items.filter(item => item.id !== action.payload);\n    },\n    minusCartItem: (state, action) => {\n      const findItem = state.items.find(item => item.id === action.payload);\n\n      if (findItem) {\n        if (findItem.count > 1) {\n          findItem.count -= 1;\n        } else {\n          state.items = state.items.filter(item => item.id !== action.payload);\n        }\n\n        state.totalPrice -= findItem.price;\n      }\n\n      state.totalCount -= 1;\n    },\n    clearCartItems: state => {\n      state.items = [];\n      state.totalCount = 0;\n      state.totalPrice = 0;\n    }\n  }\n});\nexport default cartSlice.reducer;\nexport const {\n  addItemToCart,\n  removeCartItem,\n  minusCartItem,\n  clearCartItems\n} = cartSlice.actions;","map":{"version":3,"names":["getCartFromLS","createSlice","items","totalCount","totalPrice","initialState","cartSlice","name","reducers","addItemToCart","state","action","findItem","find","item","id","payload","push","count","price","removeCartItem","filter","minusCartItem","clearCartItems","reducer","actions"],"sources":["/home/nick/Projects/Pizza App/PizzaSite/src/redux/slices/cartSlice.ts"],"sourcesContent":["import { getCartFromLS } from './../../utils/getCartStateFromLS';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ICartItem, ICartSlice } from '../../@types/cartSliceTypes';\n\nconst { items, totalCount, totalPrice } = getCartFromLS();\n\nconst initialState: ICartSlice = {\n  items,\n  totalCount,\n  totalPrice,\n};\n\nexport const cartSlice = createSlice({\n  name: 'cartSlice',\n  initialState,\n  reducers: {\n    addItemToCart: (state, action: PayloadAction<ICartItem>) => {\n      const findItem = state.items.find((item) => item.id === action.payload.id);\n      if (!findItem) {\n        state.items.push(action.payload);\n      } else {\n        findItem.count += 1;\n      }\n      state.totalCount += 1;\n      state.totalPrice += action.payload.price;\n    },\n    removeCartItem: (state, action: PayloadAction<string>) => {\n      const findItem = state.items.find((item) => item.id === action.payload);\n      if (findItem) {\n        state.totalCount -= findItem.count;\n        state.totalPrice -= findItem.price * findItem.count;\n      }\n\n      state.items = state.items.filter((item) => item.id !== action.payload);\n    },\n    minusCartItem: (state, action: PayloadAction<string>) => {\n      const findItem = state.items.find((item) => item.id === action.payload);\n      if (findItem) {\n        if (findItem.count > 1) {\n          findItem.count -= 1;\n        } else {\n          state.items = state.items.filter((item) => item.id !== action.payload);\n        }\n        state.totalPrice -= findItem.price;\n      }\n      state.totalCount -= 1;\n    },\n    clearCartItems: (state) => {\n      state.items = [];\n      state.totalCount = 0;\n      state.totalPrice = 0;\n    },\n  },\n});\n\nexport default cartSlice.reducer;\nexport const { addItemToCart, removeCartItem, minusCartItem, clearCartItems } = cartSlice.actions;\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kCAA9B;AACA,SAASC,WAAT,QAA2C,kBAA3C;AAGA,MAAM;EAAEC,KAAF;EAASC,UAAT;EAAqBC;AAArB,IAAoCJ,aAAa,EAAvD;AAEA,MAAMK,YAAwB,GAAG;EAC/BH,KAD+B;EAE/BC,UAF+B;EAG/BC;AAH+B,CAAjC;AAMA,OAAO,MAAME,SAAS,GAAGL,WAAW,CAAC;EACnCM,IAAI,EAAE,WAD6B;EAEnCF,YAFmC;EAGnCG,QAAQ,EAAE;IACRC,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA6C;MAC1D,MAAMC,QAAQ,GAAGF,KAAK,CAACR,KAAN,CAAYW,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,EAAtD,CAAjB;;MACA,IAAI,CAACH,QAAL,EAAe;QACbF,KAAK,CAACR,KAAN,CAAYe,IAAZ,CAAiBN,MAAM,CAACK,OAAxB;MACD,CAFD,MAEO;QACLJ,QAAQ,CAACM,KAAT,IAAkB,CAAlB;MACD;;MACDR,KAAK,CAACP,UAAN,IAAoB,CAApB;MACAO,KAAK,CAACN,UAAN,IAAoBO,MAAM,CAACK,OAAP,CAAeG,KAAnC;IACD,CAVO;IAWRC,cAAc,EAAE,CAACV,KAAD,EAAQC,MAAR,KAA0C;MACxD,MAAMC,QAAQ,GAAGF,KAAK,CAACR,KAAN,CAAYW,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAA9C,CAAjB;;MACA,IAAIJ,QAAJ,EAAc;QACZF,KAAK,CAACP,UAAN,IAAoBS,QAAQ,CAACM,KAA7B;QACAR,KAAK,CAACN,UAAN,IAAoBQ,QAAQ,CAACO,KAAT,GAAiBP,QAAQ,CAACM,KAA9C;MACD;;MAEDR,KAAK,CAACR,KAAN,GAAcQ,KAAK,CAACR,KAAN,CAAYmB,MAAZ,CAAoBP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAhD,CAAd;IACD,CAnBO;IAoBRM,aAAa,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAA0C;MACvD,MAAMC,QAAQ,GAAGF,KAAK,CAACR,KAAN,CAAYW,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAA9C,CAAjB;;MACA,IAAIJ,QAAJ,EAAc;QACZ,IAAIA,QAAQ,CAACM,KAAT,GAAiB,CAArB,EAAwB;UACtBN,QAAQ,CAACM,KAAT,IAAkB,CAAlB;QACD,CAFD,MAEO;UACLR,KAAK,CAACR,KAAN,GAAcQ,KAAK,CAACR,KAAN,CAAYmB,MAAZ,CAAoBP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAhD,CAAd;QACD;;QACDN,KAAK,CAACN,UAAN,IAAoBQ,QAAQ,CAACO,KAA7B;MACD;;MACDT,KAAK,CAACP,UAAN,IAAoB,CAApB;IACD,CA/BO;IAgCRoB,cAAc,EAAGb,KAAD,IAAW;MACzBA,KAAK,CAACR,KAAN,GAAc,EAAd;MACAQ,KAAK,CAACP,UAAN,GAAmB,CAAnB;MACAO,KAAK,CAACN,UAAN,GAAmB,CAAnB;IACD;EApCO;AAHyB,CAAD,CAA7B;AA2CP,eAAeE,SAAS,CAACkB,OAAzB;AACA,OAAO,MAAM;EAAEf,aAAF;EAAiBW,cAAjB;EAAiCE,aAAjC;EAAgDC;AAAhD,IAAmEjB,SAAS,CAACmB,OAAnF"},"metadata":{},"sourceType":"module"}