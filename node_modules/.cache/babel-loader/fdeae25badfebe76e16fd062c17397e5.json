{"ast":null,"code":"var _jsxFileName = \"/home/nick/Projects/Pizza App/PizzaSite/src/components/PizzaBlock/PizzaBlock.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useAppSelector } from '../../hooks';\nimport { addItemToCart } from '../../redux/slices/cartSlice';\nimport styles from './PizzaBlock.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PizzaBlock = _ref => {\n  _s();\n\n  let {\n    id,\n    imageUrl,\n    title,\n    type,\n    size,\n    price\n  } = _ref;\n  const dispatch = useDispatch();\n  const cartItem = useAppSelector(state => state.cart.items.find(item => item.id === id));\n  const {\n    t\n  } = useTranslation();\n  const typesList = [{\n    id: 0,\n    name: t('typesList0')\n  }, {\n    id: 1,\n    name: t('typesList1')\n  }];\n\n  const addToCart = () => {\n    dispatch(addItemToCart({\n      id,\n      imageUrl,\n      title,\n      type: typesList[type].name,\n      size,\n      price,\n      count: 1\n    }));\n  };\n\n  const count = cartItem ? cartItem.count : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pizzaBlock,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/pizza/` + id,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.image,\n        src: imageUrl,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: styles.title,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.selector,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [typesList[type].name, \" \", t('dough')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [t('pizzaSize'), \": \", size, \" \", t('pizzaSizeCm')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bottom,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.price,\n        children: [price, \" \\u20BD\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addToCart,\n        className: styles.button,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"12\",\n          height: \"12\",\n          viewBox: \"0 0 12 12\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\",\n            fill: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: t('addButton')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), count > 0 && /*#__PURE__*/_jsxDEV(\"i\", {\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PizzaBlock, \"Jm/8ow2u3Eax+nUOVGtajVpbBMg=\", false, function () {\n  return [useDispatch, useAppSelector, useTranslation];\n});\n\n_c = PizzaBlock;\nexport default PizzaBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"PizzaBlock\");","map":{"version":3,"names":["React","useTranslation","useDispatch","Link","useAppSelector","addItemToCart","styles","PizzaBlock","id","imageUrl","title","type","size","price","dispatch","cartItem","state","cart","items","find","item","t","typesList","name","addToCart","count","pizzaBlock","image","selector","bottom","button"],"sources":["/home/nick/Projects/Pizza App/PizzaSite/src/components/PizzaBlock/PizzaBlock.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { ICartItem } from '../../@types/cartSliceTypes';\nimport { useAppSelector } from '../../hooks';\nimport { addItemToCart } from '../../redux/slices/cartSlice';\n\nimport styles from './PizzaBlock.module.scss';\n\nexport type TypeItem = {\n  id: number;\n  name: string;\n};\n\ntype PizzaBlockProps = {\n  id: string;\n  imageUrl: string;\n  title: string;\n  type: number;\n  size: number;\n  price: number;\n};\n\nconst PizzaBlock: FC<PizzaBlockProps> = ({ id, imageUrl, title, type, size, price }) => {\n  const dispatch = useDispatch();\n  const cartItem = useAppSelector((state) =>\n    state.cart.items.find((item: ICartItem) => item.id === id),\n  );\n  const { t } = useTranslation();\n\n  const typesList: TypeItem[] = [\n    { id: 0, name: t('typesList0') },\n    { id: 1, name: t('typesList1') },\n  ];\n\n  const addToCart = () => {\n    dispatch(\n      addItemToCart({\n        id,\n        imageUrl,\n        title,\n        type: typesList[type].name,\n        size,\n        price,\n        count: 1,\n      }),\n    );\n  };\n  const count = cartItem ? cartItem.count : 0;\n\n  return (\n    <div className={styles.pizzaBlock}>\n      <Link to={`/pizza/` + id}>\n        <img className={styles.image} src={imageUrl} alt={title} />\n        <h4 className={styles.title}>{title}</h4>\n      </Link>\n      <div className={styles.selector}>\n        <div>\n          {typesList[type].name} {t('dough')}\n        </div>\n        <div>\n          {t('pizzaSize')}: {size} {t('pizzaSizeCm')}\n        </div>\n      </div>\n      <div className={styles.bottom}>\n        <div className={styles.price}>{price} â‚½</div>\n        <button onClick={addToCart} className={styles.button}>\n          <svg\n            width=\"12\"\n            height=\"12\"\n            viewBox=\"0 0 12 12\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n              fill=\"white\"\n            />\n          </svg>\n          <span>{t('addButton')}</span>\n          {count > 0 && <i>{count}</i>}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PizzaBlock;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}