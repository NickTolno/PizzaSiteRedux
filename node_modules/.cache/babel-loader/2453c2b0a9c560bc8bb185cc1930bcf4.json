{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport pizzasSlice from './slices/pizzasSlice';\nimport cartSlice from './slices/cartSlice';\nimport filterSlice from './slices/filterSlice';\nimport pizzaItemSlice from './slices/pizzaItemSlice';\nexport const store = configureStore({\n  reducer: {\n    pizzas: pizzasSlice,\n    cart: cartSlice,\n    filter: filterSlice,\n    pizzaItem: pizzaItemSlice\n  }\n}); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"names":["configureStore","pizzasSlice","cartSlice","filterSlice","pizzaItemSlice","store","reducer","pizzas","cart","filter","pizzaItem"],"sources":["/home/nick/Projects/PizzaSite/src/redux/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport pizzasSlice from './slices/pizzasSlice';\nimport cartSlice from './slices/cartSlice';\nimport filterSlice from './slices/filterSlice';\nimport pizzaItemSlice from './slices/pizzaItemSlice';\n\nexport const store = configureStore({\n  reducer: {\n    pizzas: pizzasSlice,\n    cart: cartSlice,\n    filter: filterSlice,\n    pizzaItem: pizzaItemSlice,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAClCM,OAAO,EAAE;IACPC,MAAM,EAAEN,WADD;IAEPO,IAAI,EAAEN,SAFC;IAGPO,MAAM,EAAEN,WAHD;IAIPO,SAAS,EAAEN;EAJJ;AADyB,CAAD,CAA5B,C,CASP"},"metadata":{},"sourceType":"module"}